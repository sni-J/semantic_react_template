{"version":3,"sources":["components/Navbar/Navbar.js","components/TabContent/TabContent.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js","components/logo.svg"],"names":["menuItem","Navbar","state","visible","window","innerWidth","Responsive","onlyTablet","minWidth","iconRotating","handleItemClick","e","_ref","name","_this","mobileMenuSwitch","props","onlyMobile","maxWidth","setState","setTimeout","themeSwitch","_this2","this","_this$state","_this$props","activeItem","login","dark","react_default","a","createElement","Container","Object","assign","as","Menu","secondary","inverted","className","position","Item","header","href","src","logo","alt","Checkbox","label","Icon","onClick","fitted","size","stackable","map","menu","key","active","Divider","Input","transparent","icon","placeholder","Component","HomeContent","stargazers_count","forks_count","getGithubInfo","axios","get","then","data","objectSpread","catch","console","log","fetchData","_callee","regenerator_default","wrap","_context","prev","next","stop","id","Button","color","svn_url","content","basic","TabContent","components","home","TagName","footerItem","footerLink","Github","Footer","item","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","prevState","bind","assertThisInitialized","Navbar_Navbar_Navbar","TabContent_TabContent","Footer_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5dc82590.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Menu,\r\n  Container,\r\n  Responsive,\r\n  Icon,\r\n  Checkbox,\r\n  Divider,\r\n} from 'semantic-ui-react'\r\nimport logo from '../logo.svg'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './Navbar.css'\r\n\r\nconst menuItem = ['home', 'messages', 'friends']\r\n\r\nexport default class Navbar extends Component {\r\n  state = {\r\n    visible: window.innerWidth >= Responsive.onlyTablet.minWidth,\r\n    iconRotating: ''\r\n  }\r\n\r\n  handleItemClick = (e, {name}) => {\r\n    this.mobileMenuSwitch(e)\r\n    this.props.handleItemClick(e, {name})\r\n  }\r\n\r\n  mobileMenuSwitch = (e) => {\r\n    if(window.innerWidth <= Responsive.onlyMobile.maxWidth){\r\n      this.setState(state => ({ visible: !state.visible, iconRotating: ' rotating' }))\r\n      setTimeout(\r\n        () => {this.setState(state => ({iconRotating: ''}))}\r\n      , 500)\r\n    }\r\n  }\r\n\r\n  themeSwitch = (e) => {\r\n    this.mobileMenuSwitch(e)\r\n    this.props.themeSwitch(e)\r\n  }\r\n\r\n  render(){\r\n\r\n    const { visible, iconRotating } = this.state\r\n    const { activeItem, login, dark } = this.props\r\n\r\n    return (\r\n      <Container>\r\n        <Responsive\r\n          {...Responsive.onlyMobile}\r\n          as={Menu}\r\n          secondary\r\n          inverted\r\n          className='navbar'\r\n        >\r\n          <Menu.Menu position=\"left\">\r\n            <Menu.Item\r\n              as='a'\r\n              header\r\n              href=\"\"\r\n            >\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item header>\r\n              <Checkbox\r\n                label={\r\n                  <div className='menuIconDiv'>\r\n                    <Icon\r\n                      name='bars'\r\n                      onClick={this.mobileMenuSwitch}\r\n                      fitted\r\n                      size='large'\r\n                      className={\r\n                        'menuIcon' +\r\n                        ((!visible && ' visible') || '') +\r\n                        iconRotating\r\n                      }\r\n                    />\r\n                    <Icon\r\n                      name='x'\r\n                      onClick={this.mobileMenuSwitch}\r\n                      fitted\r\n                      size='large'\r\n                      className={\r\n                        'menuIcon' +\r\n                        ((visible && ' visible') || '') +\r\n                        iconRotating\r\n                      }\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Responsive>\r\n        <Container className={\r\n          'navItem'+((visible && ' mobile_open')||'')\r\n        }>\r\n          <Menu inverted secondary stackable className='navbar'>\r\n            <Responsive\r\n              minWidth={Responsive.onlyTablet.minWidth}\r\n              as={Menu.Menu}\r\n              position=\"left\"\r\n            >\r\n              <Menu.Item\r\n                as='a'\r\n                header\r\n                href=\"\"\r\n              >\r\n                <img src={logo} alt=\"logo\"/>\r\n              </Menu.Item>\r\n            </Responsive>\r\n            <Menu.Menu position=\"left\">\r\n              {\r\n                menuItem.map(menu => {\r\n                  return (\r\n                    <Menu.Item\r\n                      key={\"navbar_\"+menu}\r\n                      name={menu}\r\n                      active={activeItem === menu}\r\n                      onClick={this.handleItemClick}\r\n                    />\r\n                  )\r\n                })\r\n              }\r\n            </Menu.Menu>\r\n            <Responsive\r\n              {...Responsive.onlyMobile}\r\n              as={Divider}\r\n            />\r\n            <Menu.Menu position='right'>\r\n              <Menu.Item>\r\n                <Input inverted transparent icon=\"search\" placeholder='Search...' />\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                as='a'\r\n                onClick={this.themeSwitch}\r\n              >\r\n                <Responsive\r\n                  minWidth={Responsive.onlyTablet.minWidth}\r\n                >\r\n                  <Icon\r\n                    name='adjust'\r\n                    fitted\r\n                  />\r\n                </Responsive>\r\n                <Responsive\r\n                  {...Responsive.onlyMobile}\r\n                >\r\n                  <Icon\r\n                    name='adjust'\r\n                  />\r\n                  {\r\n                    visible &&\r\n                    ((dark && 'Dark') || 'Light')\r\n                  }\r\n                </Responsive>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                name={login}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            </Menu.Menu>\r\n          </Menu>\r\n        </Container>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Button,\r\n} from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport axios from 'axios'\r\n\r\nclass HomeContent extends Component {\r\n  state = {stargazers_count: 'Loading...', forks_count: 'Loading...'}\r\n\r\n  getGithubInfo =\r\n    axios.get('https://api.github.com/repos/sni-J/semantic_react_test')\r\n    .then(({data})=>{\r\n      const {stargazers_count, forks_count} = data\r\n      this.setState({...{stargazers_count, forks_count}})\r\n    })\r\n    .catch((e) => console.log('getGithubInfo: '+e))\r\n\r\n  fetchData = async () => {\r\n    await this.getGithubInfo\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Container>\r\n        <h2 id=\"responsive-template-implemented-with-create-react-app--semantic-react\">Responsive Template implemented with <a href=\"https://github.com/facebook/create-react-app\">Create React App</a> + <a href=\"https://react.semantic-ui.com/\">Semantic-react</a></h2>\r\n        <Divider />\r\n        <ul>\r\n          <li>Structure\r\n            <ul>\r\n              <li>\r\n                App\r\n                <ul>\r\n                  <li>Navbar: Responsive menu navigation bar</li>\r\n                  <li>TabContent: Contents changes along the selection of menu</li>\r\n                  <li>Footer: Footer contents Also Responsive</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <Divider />\r\n        <Button icon='github' color='black' as='a' href={this.state.svn_url} content='Visit Github'/>\r\n        <Button icon='star' color='black' label={{as: 'a', color:'black', basic: false, href: 'https://github.com/sni-J/semantic_react_test/stargazers', content: this.state.stargazers_count}} />\r\n        <Button icon='fork' color='black' label={{as: 'a', color:'black', basic: false, href: 'https://github.com/sni-J/semantic_react_test/forks', content: this.state.forks_count}} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class TabContent extends Component {\r\n  components = {\r\n      'home': HomeContent\r\n  }\r\n\r\n  render(){\r\n    const { activeItem } = this.props\r\n    const TagName = this.components[activeItem]\r\n\r\n    if(TagName){\r\n      return (\r\n        <TagName />\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <Container>\r\n          <p>Not Found, But Not 404. Maybe under construction.</p>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Menu,\r\n  Container,\r\n  Responsive,\r\n} from 'semantic-ui-react'\r\nimport logo from '../logo.svg'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './Footer.css'\r\n\r\nconst footerItem = ['Github']\r\nconst footerLink = {'Github':'https://github.com/sni-J/semantic_react_test'}\r\n\r\nexport default class Footer extends Component {\r\n  state = {\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Container className='footerContainer'>\r\n        <Responsive\r\n          {...Responsive.onlyMobile}\r\n          as={Menu}\r\n          secondary\r\n          inverted\r\n          className='footer'\r\n        >\r\n          <Menu.Menu position='left'>\r\n            <Menu.Item>\r\n              <img src={logo} alt=\"logo\"/>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n          <Menu.Menu position='right'>\r\n            <Menu.Item as='p'>\r\n              Template made by &nbsp;<a href=\"https://github.com/sni-J\">sni/J</a>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Responsive>\r\n        <Container className='footerItem'>\r\n          <Menu secondary inverted stackable className='footer'>\r\n            <Responsive\r\n              minWidth={Responsive.onlyTablet.minWidth}\r\n              as={Menu.Menu}\r\n              position=\"left\"\r\n            >\r\n              <Menu.Item>\r\n                <img src={logo} alt=\"logo\"/>\r\n              </Menu.Item>\r\n            </Responsive>\r\n            <Menu.Menu position='left'>\r\n            {\r\n              footerItem.map(item => {\r\n                return (\r\n                  <Menu.Item\r\n                    key={\"footer_\"+item}\r\n                    name={item}\r\n                    as='a'\r\n                    href={footerLink[item]}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n            </Menu.Menu>\r\n            <Responsive\r\n              minWidth={Responsive.onlyTablet.minWidth}\r\n              as={Menu.Menu}\r\n              position=\"right\"\r\n            >\r\n              <Menu.Item as='p'>\r\n                Template made by &nbsp;<a href=\"https://github.com/sni-J\">sni/J</a>\r\n              </Menu.Item>\r\n            </Responsive>\r\n          </Menu>\r\n        </Container>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './App.css'\r\nimport Navbar from './Navbar/Navbar.js'\r\nimport TabContent from './TabContent/TabContent.js'\r\nimport Footer from './Footer/Footer.js'\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleItemClick = this.handleItemClick.bind(this)\r\n    this.state = {\r\n      activeItem: 'home',\r\n      login: 'login',\r\n      dark: true\r\n    }\r\n  }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name })\r\n  }\r\n\r\n  themeSwitch = (e) => {\r\n    this.setState((prevState) => ({ dark: !prevState.dark }))\r\n  }\r\n\r\n  render() {\r\n    const { dark } = this.state\r\n\r\n    return (\r\n      <div className={\"App\" + ((dark && ' dark') || '')}>\r\n        <div className=\"App-header\">\r\n          <Navbar handleItemClick={this.handleItemClick} themeSwitch={this.themeSwitch} {...this.state}>\r\n          </Navbar>\r\n        </div>\r\n        <div className=\"App-body\">\r\n          <TabContent {...this.state}>\r\n          </TabContent>\r\n        </div>\r\n        <div className='App-footer'>\r\n          <Footer>\r\n          </Footer>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}